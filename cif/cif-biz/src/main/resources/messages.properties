vf.minLength=${label} must be at least ${validator.minLength} characters long.
vf.maxLength=${label} must not be greater than ${validator.maxLength} characters long.
#vf.numberOutOfRange=${label} must be at least ${validator.minimumValue} and no greater than ${validator.maximumValue}.
#vf.invalidNumber=${label} must be a number.
vf.numberOutOfRange=${label} \u5FC5\u987B\u5927\u4E8E\u7B49\u4E8E ${validator.minimumValue/10000}\u5206 \u4E14 \u5C0F\u4E8E\u7B49\u4E8E ${validator.maximumValue/10000}\u5206.
vf.numberOutOfMin=${label} \u5FC5\u987B\u5927\u4E8E\u7B49\u4E8E ${validator.minimumValue/10000}\u5206.
vf.invalidNumber=${label} \u5FC5\u987B\u662F\u4E00\u4E2A\u6570\u5B57.
#vf.null=${label} is a required field.
vf.null=${label} \u4E0D\u80FD\u4E3A\u7A7A.
vf.dateRange=The beginning date for ${label} must be equal to or before the ending date.
vf.dateBeforeRange=The date for ${label} cannot come before ${new java.text.SimpleDateFormat( "MMMM dd, yyyy" ).format( failure )}.
vf.dateAfterRange=The date for ${label} cannot come after ${new java.text.SimpleDateFormat( "MMMM dd, yyyy" ).format( failure )}.
vf.dateFormat=The date format for ${label} is ${validator.displayFormat}.
vf.regex=The value of ${label} does not match the defined regular expression.
vf.emailAddress=The address ${failure} given for ${label} is not in a valid email address format.
# SS: <Enhancement> Added in message for MVEL ExpressionValidator
vf.mvelExp=${label} is invalid.
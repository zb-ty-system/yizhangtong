<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!--redis 缓存配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${config.redis.pool.maxActive}"></property>
        <!-- 控制一个pool最多有多少个状态为idle的jedis实例-->
        <property name="maxIdle" value="${config.redis.pool.maxIdle}"></property>
        <!-- 控制一个pool最少有多少个状态为idle的jedis实例-->
        <property name="minIdle" value="${config.redis.pool.minIdle}"></property>
        <!-- 当池内没有返回对象时，最大等待时间 -->
        <property name="maxWaitMillis" value="${config.redis.pool.maxWait}"></property>
        <!-- 在borrow一个jedis实例时，是否提前进行alidate操作；如果为true，则得到的jedis实例均是可用的 -->
        <property name="testOnBorrow" value="${config.redis.pool.testOnBorrow}"></property>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          destroy-method="destroy">
        <property name="hostName" value="${config.redis.ip}"/>
        <property name="port" value="${config.redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="database" value="${config.redis.database}"/>
        <property name="password" value="${config.redis.password}"/>
    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <!--redis对缓存的封装，此处为string-object 的key-value键值对形式 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory">
        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="objectRedisComponent" class="com.zb.sms.common.redis.ObjectRedisComponent">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <bean id="stringRedisComponent" class="com.zb.sms.common.redis.StringRedisComponent">
        <property name="stringRedisTemplate" ref="stringRedisTemplate"/>
    </bean>
</beans>